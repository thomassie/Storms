library(tidyverse)
library(ggplot2)
library(TTR)
library(lubridate)
library(smooth)
library(zoo)
library(tidyquant)
library(scales)
library(shiny)
library(shinythemes)
dd.allCountries <- read_csv("https://raw.githubusercontent.com/thomassie/ClimateDataApp/master/Data/GlobalLandTemperaturesByCountry.csv")
str(dd.allCountries)
# dd.overall <- read_csv("~/Library/Mobile Documents/com~apple~Clouddocs/Data analysis/Global temperature change/GlobalTemperatures.csv")
dd.overall <- read_csv("https://raw.githubusercontent.com/thomassie/ClimateDataApp/master/Data/GlobalTemperatures.csv")
str(dd.overall)
runApp('~/Library/Mobile Documents/com~apple~CloudDocs/Data analysis/GitHub/ClimateDataApp')
dd %>%
group_by(Country) %>%
filter(Country == input$selected.country) %>%
# group_by(Year) %>%
ggplot(aes(x = Month,
y = AverageTemperature,
group = Year,
color = Year)) +
scale_color_distiller(palette = "Spectral") +
geom_line(size = 0.8, alpha = 0.3) +
# theme_classic() +
# theme(legend.justification = c(0, 0), legend.position = c(0.04, 0.6)) +
guides(color = guide_colorbar(barwidth = 0.5, barheight = 6)) +
# xlab("Month") +
# ylab("Temperature (°Celcius)") +
# labs(title = input$selected.country)
labs(x = "Month",
y = "Temperature (°Celcius)",
title = "Do extreme events become more severe?") +
# subtitle = expression("Storm intensity indicated by minimum in central pressure. \nThe lower the pressure the more intense the storm."),
# caption = "Source: NOAA's National Hurricane Center (http://www.nhc.noaa.gov/data/)") +
theme(axis.text = element_text(family = "Varela Round"),
axis.text.x = element_text(size = 11, colour = "#3C3C3C", face = "bold", vjust = 1),
axis.text.y = element_text(size = 11, colour = "#3C3C3C", face = "bold", vjust = 0),
axis.ticks = element_line(colour = "#D7D8D8", size = 0.2),
axis.ticks.length = unit(5, "mm"),
axis.line = element_blank(),
plot.title = element_text(face = "bold", hjust = 0, vjust = -0.5, colour = "#3C3C3C", size = 20),
plot.subtitle = element_text(hjust = 0, vjust = -5, colour = "#3C3C3C", size = 11),
plot.caption = element_text(size = 8, hjust = 1.5, vjust = -0.05, colour = "#7F8182"),
panel.background = element_rect(fill = "#F0F0F0"),
panel.border = element_blank(),
plot.background = element_rect(fill = "#F0F0F0", colour = "#F0F0F0"),
panel.grid.major = element_line(colour = "#D7D8D8", size = 0.2),
panel.grid.minor = element_line(colour = "#D7D8D8", size = 0.2)) +
theme(legend.title = element_blank(),
legend.justification=c(0,1),
legend.position=c(1.02, 0.3),
legend.background = element_blank(),
legend.key = element_blank()) +
scale_colour_manual(values = c("#FF281E", "#0090CF")) +
guides(colour = guide_legend(override.aes = list(alpha = 1)))
dd.allCountries <- dd.allCountries %>%
mutate(Month = month(dt, label = TRUE, abbr = TRUE)) %>%
mutate(Year = year(dt)) %>%
filter(Year >= range[1] & Year < range[2])
dd.overall <- dd.overall %>%
mutate(Month = month(dt, label = TRUE, abbr = TRUE)) %>%
mutate(Year = year(dt)) %>%
filter(Year >= range[1] & Year < range[2])
# Summarise data to obtain annual temperatures.
dd.allCountries.sum <- dd.allCountries %>%
group_by(Year, Country) %>%
summarize(Mean.Annu.Temp = mean(AverageTemperature, na.rm = TRUE),
SD.Annu.Temp = sd(AverageTemperature, na.rm = TRUE)) %>%
arrange(Country)
dd.overall.sum <- dd.overall %>%
group_by(Year) %>%
summarize(Mean.Annu.Land.Temp = mean(LandAverageTemperature, na.rm = TRUE),
SD.Annu.Land.Temp = sd(LandAverageTemperature, na.rm = TRUE))
range    <- c(input$min.year, input$max.year)
# range    <- c(1880, 2010)
# Choose country for plotting.
selected.country = input$selected.country
runApp('~/Library/Mobile Documents/com~apple~CloudDocs/Data analysis/GitHub/ClimateDataApp')
